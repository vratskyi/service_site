---
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class="mt-5 grid place-content-center">
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <form id="my-form" action="https://formspree.io/f/xbjnprpp" method="POST" class="grid place-content-center mt-10 gap-y-5">
      <div class="grid md:grid-flow-col md:place-content-center gap-y-2 md:gap-x-2 w-full">
          <label class="input input-bordered flex items-center gap-2">
              {t('contact.form.name')}
              <input type="text" name="name" maxlength="20" autocomplete="name" class="grow hover:cursor-text" value="" placeholder="Oleksii" required />
          </label>
          <label class="input input-bordered flex items-center gap-2">
              Email
              <input type="email" name="email" autocomplete="email" class="grow hover:cursor-text" value="" placeholder="example@gmail.com" required />
          </label>
      </div>
      <label class="input input-bordered flex items-center gap-2">
          {t('contact.form.site')}
          <input type="text" name="site" autocomplete="name" class="grow hover:cursor-text" value="" placeholder="example.com" />
      </label>
      <textarea id="contactText" name="message" value="" maxlength="900" placeholder={t('contact.form.textarea')} required class="textarea textarea-bordered textarea-lg w-full max-w-full placeholder:text-sm hover:cursor-text" ></textarea>
      <div class="label justify-end">
          <span id="contactTextCounter" class="label-text-alt">0/900</span>
      </div>
      <div class="grid md:grid-flow-col place-content-between gap-y-5 md:gap-y-0">
          <button type="submit" class="btn btn-sm btn-primary place-self-start">{t('contact.form.button.submit')}</button>
          <div class="g-recaptcha" data-sitekey="6LfnnbIpAAAAAAP7qxHigeO2IAd-kvC8ulOAZHuS"></div>
      </div>
      <div class="mt-5">
          <p id="my-form-status" class="prose"></p>
      </div>
  </form>
</div>

<script type="text/javascript" is:inline>
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById("my-form");
    const status = document.getElementById("my-form-status");

    if (form && status) { // Проверяем, что элементы формы и статуса существуют
        // Получаем текущую локаль из URL
        const lang = window.location.pathname.split('/')[1];

        async function handleSubmit(event) {
            event.preventDefault();

            // Получаем данные из полей формы
            const formData = new FormData(form);
            const data = {};
            formData.forEach((value, key) => {
                data[key] = value;
            });

            // Отправляем данные на сервер
            fetch(form.action, {
                method: form.method,
                body: JSON.stringify(data), // Преобразуем данные в формат JSON
                headers: {
                    'Content-Type': 'application/json',
                },
            }).then(response => {
                if (response.ok) {
                    window.location.href = `/${lang}/contact/success`; // Вставляем текущую локаль в ссылку
                    form.reset();
                } else {
                    response.json().then(data => {
                        if (data && data.errors) {
                            status.innerHTML = data.errors.map(error => error.message).join(", ");
                        } else {
                            window.location.href = `/${lang}/contact/failed`; // Вставляем текущую локаль в ссылку
                        }
                    });
                }
            }).catch(error => {
                window.location.href = `/${lang}/contact/error`; // Вставляем текущую локаль в ссылку
            });
        }

        form.addEventListener("submit", handleSubmit);
    }
});
</script>

<script type="text/javascript" is:inline>

document.addEventListener('DOMContentLoaded', () => {
    const counter = document.getElementById('contactTextCounter');
    const contactText = document.getElementById('contactText');

    // Проверяем существование элементов counter и contactText
    if (counter && contactText) {
        contactText.addEventListener('input', () => {
            let count = contactText.value.length; // Получаем текущую длину текста в поле ввода

            // Если поле ввода пустое, счетчик устанавливается в 0
            if (count === 0) {
                counter.textContent = '0/900';
                return; // Выходим из функции, чтобы не выполнять лишний код
            }

            // Ограничиваем максимальное количество символов до 900
            if (count > 900) {
                contactText.value = contactText.value.slice(0, 900); // Обрезаем текст до 900 символов
                count = 900; // Устанавливаем счетчик в 900
            }

            // Если пользователь удаляет текст, уменьшаем счетчик
            if (count < parseInt(counter.textContent)) {
                count = parseInt(counter.textContent) - 1;
            }

            // Обновляем значение счетчика
            counter.textContent = `${count}/900`;
        });
    }
});

</script>